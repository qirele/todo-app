(()=>{"use strict";var e={195:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([e.id,".grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(0, 300px));\n  padding: 50px 0;\n  gap: 10px;\n}\n\n.grid h1 {\n  padding: 0 0 20px 0;\n}\n\n.todo-card {\n  border-bottom: 2px solid black;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.todo-card .todo-title {\n  font-size: 1.2rem;\n}\n\n.grid h1 {\n  color: rgb(177, 177, 255);\n  cursor: pointer;\n  background-color: rgb(67, 67, 67);\n}\n\n.grid > div {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.high-priority {\n  background-color: rgb(77, 0, 0);\n}\n\n.medium-priority {\n  background-color: rgb(78, 78, 0);\n}\n\n.low-priority {\n  background-color: rgb(0, 55, 31);\n}","",{version:3,sources:["webpack://./src/components/projects/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,yDAAyD;EACzD,eAAe;EACf,SAAS;AACX;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,8BAA8B;EAC9B,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;EACzB,eAAe;EACf,iCAAiC;AACnC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,gCAAgC;AAClC",sourcesContent:[".grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(0, 300px));\n  padding: 50px 0;\n  gap: 10px;\n}\n\n.grid h1 {\n  padding: 0 0 20px 0;\n}\n\n.todo-card {\n  border-bottom: 2px solid black;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.todo-card .todo-title {\n  font-size: 1.2rem;\n}\n\n.grid h1 {\n  color: rgb(177, 177, 255);\n  cursor: pointer;\n  background-color: rgb(67, 67, 67);\n}\n\n.grid > div {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.high-priority {\n  background-color: rgb(77, 0, 0);\n}\n\n.medium-priority {\n  background-color: rgb(78, 78, 0);\n}\n\n.low-priority {\n  background-color: rgb(0, 55, 31);\n}"],sourceRoot:""}]);const d=c},262:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([e.id,".project-input-div {\n  margin-top: 50px;\n}","",{version:3,sources:["webpack://./src/components/ui/style.css"],names:[],mappings:"AAAA;EACE,gBAAgB;AAClB",sourcesContent:[".project-input-div {\n  margin-top: 50px;\n}"],sourceRoot:""}]);const d=c},426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([e.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #1e1e1e;\n  color: #e1e1e1;\n  margin: 50px auto;\n  max-width: 1000px;\n\n}\n\n.currentProject {\n  box-shadow: 0px 0px 5px 2px #c1c1c1;\n  background-color: #1e1e1e;\n  transition: all .3s;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;EACzB,cAAc;EACd,iBAAiB;EACjB,iBAAiB;;AAEnB;;AAEA;EACE,mCAAmC;EACnC,yBAAyB;EACzB,mBAAmB;AACrB",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #1e1e1e;\n  color: #e1e1e1;\n  margin: 50px auto;\n  max-width: 1000px;\n\n}\n\n.currentProject {\n  box-shadow: 0px 0px 5px 2px #c1c1c1;\n  background-color: #1e1e1e;\n  transition: all .3s;\n}\n"],sourceRoot:""}]);const d=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var d=0;d<this.length;d++){var i=this[d][0];null!=i&&(c[i]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&c[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},c=[],d=0;d<e.length;d++){var i=e[d],l=o.base?i[0]+o.base:i[0],s=a[l]||0,p="".concat(l," ").concat(s);a[l]=s+1;var u=n(p),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var A=r(m,o);o.byIndex=d,t.splice(d,0,{identifier:p,updater:A,references:1})}c.push(p)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var d=n(a[c]);t[d].references--}for(var i=o(e,r),l=0;l<a.length;l++){var s=n(a[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=i}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),c=n.n(a),d=n(565),i=n.n(d),l=n(216),s=n.n(l),p=n(589),u=n.n(p),m=n(426),A={};function C(e,t,n,o){const r=["high","medium","low"];return{setTitle:t=>e=t,getTitle:()=>e,setDescription:e=>t=e,getDescription:()=>t,setDueDate:e=>n=e,getDueDate:()=>n,getImportance:()=>r[o],getImportanceIdx:()=>o,setImportanceIdx:e=>o=e}}function g(e){const t=[];return{getTitle:()=>e,getTodos:()=>t,addTodo:e=>{t.push(e)},deleteTodo:e=>{t.splice(e,1)}}}A.styleTagTransform=u(),A.setAttributes=i(),A.insert=c().bind(null,"head"),A.domAPI=r(),A.insertStyleElement=s(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;var h=n(195),f={};function E(e){const t=document.createElement("main");return t.classList.add("grid"),e.forEach(((e,n)=>{const o=document.createElement("div");o.dataset.projectIdx=n;const r=document.createElement("h1");r.textContent=e.getTitle(),r.dataset.projectIdx=n,o.appendChild(r),e.getTodos().forEach(((e,t)=>{const{todoDiv:r}=function(e,t,n){const o=document.createElement("div");switch(o.classList.add("todo-card"),o.dataset.idx=t,o.dataset.projectIdx=n,e.getImportance()){case"high":o.classList.add("high-priority");break;case"medium":o.classList.add("medium-priority");break;case"low":o.classList.add("low-priority");break;default:o.classList.add("blank-priority")}const r=document.createElement("div");r.classList.add("todo-content-div");const{dateDiv:a,titleDiv:c}=function(e){const t=document.createElement("div"),n=document.createElement("span"),o=document.createElement("span"),r=document.createElement("div"),a=document.createElement("p");return n.textContent="Due date: ",o.textContent=e.getDueDate(),t.appendChild(n),t.appendChild(o),a.textContent=e.getTitle(),a.classList.add("todo-title"),r.appendChild(a),{dateDiv:t,titleDiv:r}}(e);r.appendChild(a),r.appendChild(c);const d=document.createElement("button");return d.textContent="Expand",d.classList.add("expand-btn"),o.appendChild(r),o.appendChild(d),{todoDiv:o,expandBtn:d}}(e,t,n);o.appendChild(r)}));const a=document.createElement("button");a.textContent="Delete project",a.classList.add("delete-project-btn"),o.appendChild(a),t.appendChild(o)})),t}f.styleTagTransform=u(),f.setAttributes=i(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=s(),t()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;var v=n(262),x={};let b,y;x.styleTagTransform=u(),x.setAttributes=i(),x.insert=c().bind(null,"head"),x.domAPI=r(),x.insertStyleElement=s(),t()(v.Z,x),v.Z&&v.Z.locals&&v.Z.locals,localStorage.getItem("projects")?(b=[],JSON.parse(localStorage.getItem("projects")).forEach((e=>{const t=g(e.project_title);e.todos.forEach((e=>{t.addTodo(C(e.title,e.desc,e.date,e.importance))})),b.push(t)})),y=parseInt(localStorage.getItem("currentProjectIdx"))):(b=[],b.push(g("Today")),y=0,b[y].addTodo(C("do tomfoolery","desc","2023-09-04",0)),b[y].addTodo(C("create mischief","desc","2023-09-04",1)),P());const B=document.querySelector("body"),{header:I,titleInput:T,dateInput:S,addTodoBtn:j,projectTitleInput:w,importanceSelect:D,addProjectBtn:k}=function(){const e=document.createElement("header"),t=document.createElement("div"),n=document.createElement("input"),o=document.createElement("label"),r=document.createElement("div"),a=document.createElement("input"),c=document.createElement("label"),d=document.createElement("button"),i=document.createElement("div"),l=document.createElement("input"),s=document.createElement("label"),p=document.createElement("button"),u=document.createElement("div"),m=document.createElement("label"),A=document.createElement("select"),C=document.createElement("option"),g=document.createElement("option"),h=document.createElement("option");return o.textContent="Todo Title",t.appendChild(n),t.appendChild(o),c.textContent="Due date",r.appendChild(a),r.appendChild(c),s.textContent="Project title",i.classList.add("project-input-div"),i.appendChild(l),i.appendChild(s),a.setAttribute("type","date"),d.textContent="Add Todo",p.textContent="Add Project",m.textContent="Todo's importance:",m.setAttribute("for","importanceSelect"),A.setAttribute("id","importanceSelect"),C.textContent="High",g.textContent="Medium",h.textContent="Low",C.value="0",g.value="1",h.value="2",A.appendChild(C),A.appendChild(g),A.appendChild(h),u.appendChild(m),u.appendChild(A),e.appendChild(t),e.appendChild(r),e.appendChild(u),e.appendChild(d),e.appendChild(i),e.appendChild(p),{header:e,titleInput:n,dateInput:a,addTodoBtn:d,projectTitleInput:l,importanceSelect:A,addProjectBtn:p}}(),L=E(b);function P(){let e=[];b.forEach((t=>{let n={project_title:t.getTitle(),todos:[]};t.getTodos().forEach((e=>{n.todos.push({title:e.getTitle(),desc:e.getDescription(),date:e.getDueDate(),importance:e.getImportanceIdx()})})),e.push(n)})),localStorage.setItem("projects",JSON.stringify(e)),localStorage.setItem("currentProjectIdx",y)}function Z(){if(0===b.length){const e=g("Today");b.push(e),q(0)}const e=E(b);document.querySelector("main").remove(),B.appendChild(e),M(),z()}function M(){function e(e){q(e.target.dataset.projectIdx),z(),P()}document.querySelectorAll("main > div > h1").forEach((t=>t.addEventListener("click",e))),document.querySelectorAll(".delete-project-btn").forEach((e=>{e.addEventListener("click",(()=>{const t=e.parentNode.dataset.projectIdx;b.splice(t,1),q(0),z(),Z(),P()}))})),document.querySelectorAll(".grid .todo-card").forEach((e=>{const t=e.dataset.projectIdx,n=e.dataset.idx,o=e.querySelector("button"),r=e.querySelector(".todo-content-div");let a=!1;o.addEventListener("click",(()=>{q(t),z();const o=b[t].getTodos()[n];if(a){const t=e.querySelector("input"),n=e.querySelector("textarea"),r=e.querySelector("select");o.setTitle(t.value),o.setDescription(n.value),o.setImportanceIdx(r.value),Z(),P()}else{const{titleDiv:e,descDiv:a,newImportanceDiv:c,newImportanceSelect:d,deleteTodoBtn:i}=function(e){const t=document.createElement("div"),n=document.createElement("input"),o=document.createElement("label"),r=document.createElement("div"),a=document.createElement("textarea"),c=document.createElement("label"),d=document.createElement("button");n.value=e.getTitle(),o.textContent="new title:",n.classList.add("new-title-input"),t.appendChild(o),t.appendChild(n),a.value=e.getDescription(),c.textContent="new description:",a.classList.add("new-description-textarea"),r.appendChild(c),r.appendChild(a);const{newImportanceDiv:i,newImportanceSelect:l}=function(){const e=document.createElement("div"),t=document.createElement("label"),n=document.createElement("select"),o=document.createElement("option"),r=document.createElement("option"),a=document.createElement("option");return t.textContent="Todo's importance:",t.setAttribute("for","newImportanceSelect"),n.setAttribute("id","newImportanceSelect"),o.textContent="High",r.textContent="Medium",a.textContent="Low",o.value="0",r.value="1",a.value="2",n.appendChild(o),n.appendChild(r),n.appendChild(a),e.appendChild(t),e.appendChild(n),{newImportanceDiv:e,newImportanceSelect:n}}();return d.textContent="Delete item",{titleDiv:t,descDiv:r,newImportanceDiv:i,deleteTodoBtn:d,titleModifyInput:n,descModifyTextarea:a,newImportanceSelect:l}}(o);r.textContent="",r.appendChild(e),r.appendChild(a),r.appendChild(c),r.appendChild(i),i.addEventListener("click",(()=>{b[t].deleteTodo(n),Z(),P()}))}a=!a,P()}))}))}function q(e){y=e}function z(){document.querySelectorAll("main > div").forEach((e=>{e.classList.remove("currentProject")})),document.querySelector(`main > div[data-project-idx="${y}"]`).classList.add("currentProject")}B.appendChild(I),B.appendChild(L),M(),z(),j.addEventListener("click",(function(){if(""===T.value)return;const e=new Date,t=(e.getMonth()+1).toString().padStart(2,"0"),n=e.getDate().toString().padStart(2,"0"),o=""===S.value?`${e.getFullYear()}-${t}-${n}`:S.value,r=C(T.value,"description",o,D.value);b[y].addTodo(r),Z(),P()})),k.addEventListener("click",(function(){if(""===w.value)return;const e=g(w.value);b.push(e),q(b.length-1),Z(),P()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,